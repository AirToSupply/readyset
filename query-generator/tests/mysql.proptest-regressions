# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc be84cf1ef65af7265cbf3350ca1c987e28748e8ce93b978734c062966ccc3afe # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [ColumnAggregate(Min { column_type: Date }), ProjectLiteral, Join(LeftJoin), ProjectLiteral, TopK { order_type: OrderDescending, limit: 9743229249284714292 }, Filter(Filter { extend_where_with: Or, operation: Comparison { op: Or, rhs: Constant(Integer(68)) }, column_type: UnsignedTinyint(77) }), ProjectBuiltinFunction(Month), ColumnAggregate(Min { column_type: Time }), MultipleParameters, Join(Join), SingleParameter, MultipleParameters, MultipleParameters, ProjectBuiltinFunction(Timediff), ProjectLiteral, ProjectBuiltinFunction(Round), Filter(Filter { extend_where_with: And, operation: Comparison { op: Or, rhs: Column }, column_type: Char(37) }), SingleParameter, ColumnAggregate(Min { column_type: Varchar(125) }), TopK { order_type: OrderDescending, limit: 1556023899465735630 }, Join(InnerJoin), MultipleParameters, MultipleParameters, ProjectLiteral, MultipleParameters, Distinct, Join(Join), Subquery(Join(InnerJoin)), ColumnAggregate(GroupConcat), Distinct, SingleParameter, TopK { order_type: OrderDescending, limit: 18244713415606211638 }, Join(InnerJoin), ProjectLiteral, SingleParameter, ProjectBuiltinFunction(Month), ColumnAggregate(Avg { column_type: Smallint(16), distinct: false }), Distinct, ProjectLiteral, SingleParameter, ProjectBuiltinFunction(DayOfWeek), Join(InnerJoin), ColumnAggregate(Avg { column_type: Double, distinct: false }), Subquery(Join(LeftJoin)), ProjectLiteral, SingleParameter, Join(Join), ProjectLiteral, TopK { order_type: OrderDescending, limit: 3112159509610895792 }, ProjectBuiltinFunction(Addtime), TopK { order_type: OrderDescending, limit: 12812796656916166374 }, TopK { order_type: OrderDescending, limit: 16738963228342849263 }, ProjectLiteral, Subquery(Join(Join)), Subquery(Cte(LeftJoin)), Filter(Filter { extend_where_with: And, operation: Comparison { op: NotLike, rhs: Constant(Integer(0)) }, column_type: Bool }), Subquery(Join(Join)), Join(LeftJoin), ProjectLiteral, Distinct, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: Bigint(58) }), Filter(Filter { extend_where_with: And, operation: Between { negated: false }, column_type: UnsignedInt(127) }), Join(LeftJoin), Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: Longtext })], subqueries: [] } }
cc 66d4eed365f41f57e38db4b344d26f13b19bc302c860c76ba06a77c2f49228da # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [ColumnAggregate(Sum { column_type: UnsignedTinyint(8), distinct: true }), SingleParameter, ProjectLiteral, MultipleParameters, ProjectLiteral, TopK { order_type: OrderDescending, limit: 345797626444166556 }, Filter(Filter { extend_where_with: And, operation: Comparison { op: LessOrEqual, rhs: Column }, column_type: Longtext }), Join(LeftJoin), SingleParameter, ColumnAggregate(GroupConcat), Distinct, Join(InnerJoin), ProjectBuiltinFunction(ConvertTZ), ColumnAggregate(GroupConcat), TopK { order_type: OrderAscending, limit: 12073813643677490230 }, Join(InnerJoin), ProjectLiteral, SingleParameter, Join(LeftJoin), Filter(Filter { extend_where_with: And, operation: Comparison { op: Divide, rhs: Constant(Integer(1932)) }, column_type: UnsignedSmallint(225) }), MultipleParameters, Distinct, TopK { order_type: OrderDescending, limit: 8485872619460246144 }, Join(Join), ProjectLiteral, Distinct, TopK { order_type: OrderAscending, limit: 10364324749719022269 }, Join(LeftJoin), ProjectBuiltinFunction(Addtime), MultipleParameters, Subquery(Join(Join)), ProjectLiteral, ProjectBuiltinFunction(IfNull), MultipleParameters, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: UnsignedSmallint(161) }), Distinct, ProjectBuiltinFunction(Month), Filter(Filter { extend_where_with: And, operation: Comparison { op: NotILike, rhs: Column }, column_type: Time }), MultipleParameters, MultipleParameters, TopK { order_type: OrderAscending, limit: 12558012553749645950 }, Distinct, Subquery(Cte(Join)), Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: Char(119) }), Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: DateTime(1) }), SingleParameter, ColumnAggregate(Sum { column_type: Real, distinct: false }), TopK { order_type: OrderAscending, limit: 4896886406914038866 }, Filter(Filter { extend_where_with: And, operation: Comparison { op: Less, rhs: Column }, column_type: UnsignedInt(145) }), Subquery(Join(InnerJoin)), ColumnAggregate(Count { column_type: Text, distinct: false, count_nulls: true }), ProjectLiteral, ProjectLiteral, MultipleParameters, Distinct, ColumnAggregate(Count { column_type: UnsignedInt(55), distinct: false, count_nulls: false }), Filter(Filter { extend_where_with: And, operation: Between { negated: true }, column_type: Text }), MultipleParameters, ProjectBuiltinFunction(Round), Join(LeftJoin), SingleParameter, MultipleParameters, ProjectBuiltinFunction(Timediff), ProjectBuiltinFunction(Addtime), Join(InnerJoin), Filter(Filter { extend_where_with: And, operation: Between { negated: false }, column_type: Text }), Filter(Filter { extend_where_with: And, operation: Comparison { op: Subtract, rhs: Column }, column_type: Varchar(65) }), SingleParameter, ColumnAggregate(Sum { column_type: Int(32), distinct: true }), Subquery(Join(InnerJoin)), SingleParameter], subqueries: [Subquery { position: Join(Join), seed: QuerySeed { operations: [TopK { order_type: OrderAscending, limit: 12625942907773718008 }, MultipleParameters, Distinct, SingleParameter, ProjectLiteral, Filter(Filter { extend_where_with: And, operation: Comparison { op: Subtract, rhs: Column }, column_type: Int(9) }), Distinct, Join(Join), Subquery(Join(Join)), Join(LeftJoin), Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: Time }), Distinct, Filter(Filter { extend_where_with: Or, operation: Comparison { op: Add, rhs: Column }, column_type: Tinyint(72) }), MultipleParameters, ProjectLiteral, Join(Join), Distinct, Subquery(Cte(Join)), Join(Join), Join(Join), Join(LeftJoin), Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: Tinytext }), ColumnAggregate(Sum { column_type: Int(32), distinct: false }), SingleParameter, ProjectLiteral, ColumnAggregate(Avg { column_type: Smallint(16), distinct: true }), ColumnAggregate(Min { column_type: DateTime(1) }), Filter(Filter { extend_where_with: Or, operation: Comparison { op: Or, rhs: Column }, column_type: Text }), Subquery(Cte(InnerJoin)), ProjectBuiltinFunction(IfNull), Subquery(Join(LeftJoin)), Join(Join), ProjectLiteral, Subquery(Cte(InnerJoin)), SingleParameter, Distinct, Distinct, SingleParameter, ProjectBuiltinFunction(DayOfWeek), Join(Join), Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: Bigint(192) }), ProjectLiteral, SingleParameter, MultipleParameters, SingleParameter, TopK { order_type: OrderAscending, limit: 7925886052775634572 }, TopK { order_type: OrderAscending, limit: 8065313275598003177 }], subqueries: [] } }] } }
cc 88cb76d080c17da5f322cc265c8679b686bb48c16fa839755e1e33fbe5ae692f # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [Filter(Filter { extend_where_with: And, operation: Comparison { op: Is, rhs: Constant(Integer(0)) }, column_type: Bool })], subqueries: [] } }
cc e5af9e9e15bf0f5b3bcfe6654a28a6cc777092f861c1daf5cd05fbc12a973568 # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [], subqueries: [Subquery { position: Cte(Join), seed: QuerySeed { operations: [TopK { order_type: OrderAscending, limit: 0 }, Join(Join), Distinct], subqueries: [] } }] } }
cc 8a47215f8e1fd74d3ad0b15e370e60dc1506b12a906cd9da03c40b82a019b478 # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [TopK { order_type: OrderAscending, limit: 17167082981242486657 }, ProjectLiteral, ColumnAggregate(GroupConcat), ProjectLiteral, ProjectLiteral, MultipleParameters, SingleParameter, ProjectBuiltinFunction(DayOfWeek), TopK { order_type: OrderDescending, limit: 18346362148858531525 }, TopK { order_type: OrderDescending, limit: 7388544347789373716 }, Distinct, TopK { order_type: OrderDescending, limit: 15128440165550134799 }, SingleParameter, MultipleParameters, Distinct, Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: Double }), ColumnAggregate(Max { column_type: UnsignedInt(248) }), TopK { order_type: OrderAscending, limit: 15082482263948900808 }, Distinct], subqueries: [Subquery { position: Join(Join), seed: QuerySeed { operations: [ProjectLiteral, SingleParameter, ProjectBuiltinFunction(Round), Distinct, Distinct, Distinct, SingleParameter, MultipleParameters, Join(Join), ProjectLiteral, TopK { order_type: OrderDescending, limit: 16768469456499724500 }, ColumnAggregate(Sum { column_type: UnsignedTinyint(8), distinct: false }), Join(InnerJoin), ColumnAggregate(Min { column_type: UnsignedSmallint(198) }), TopK { order_type: OrderAscending, limit: 13509194599111413606 }, SingleParameter, Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: UnsignedTinyint(200) }), TopK { order_type: OrderAscending, limit: 11576743258169533611 }, ProjectLiteral, TopK { order_type: OrderAscending, limit: 1913686829670472684 }, Distinct, TopK { order_type: OrderDescending, limit: 17891475253126988788 }, Distinct, SingleParameter, TopK { order_type: OrderAscending, limit: 10420066571268091140 }, ColumnAggregate(Avg { column_type: UnsignedTinyint(8), distinct: false }), MultipleParameters, TopK { order_type: OrderAscending, limit: 4770294288976138776 }, MultipleParameters, ColumnAggregate(Min { column_type: Mediumtext }), TopK { order_type: OrderAscending, limit: 11699818129607644457 }, MultipleParameters, ProjectLiteral, SingleParameter, Join(Join), SingleParameter, ProjectBuiltinFunction(Round), Filter(Filter { extend_where_with: And, operation: Comparison { op: ILike, rhs: Constant(String("<:\"jລ🕴EMer!ȺჇ\\ઃ}�")) }, column_type: Char(4) }), ProjectBuiltinFunction(Month), Join(LeftJoin)], subqueries: [Subquery { position: Cte(LeftJoin), seed: QuerySeed { operations: [SingleParameter, Distinct, SingleParameter, Distinct, Join(Join), Filter(Filter { extend_where_with: And, operation: Between { negated: true }, column_type: DateTime(1) }), Distinct, ProjectLiteral, Distinct, ColumnAggregate(GroupConcat), ColumnAggregate(Avg { column_type: UnsignedBigint(64), distinct: false }), Join(InnerJoin), TopK { order_type: OrderAscending, limit: 7119215826407624199 }, SingleParameter], subqueries: [] } }, Subquery { position: Join(Join), seed: QuerySeed { operations: [ProjectBuiltinFunction(Addtime), ColumnAggregate(Avg { column_type: UnsignedInt(32), distinct: true }), Filter(Filter { extend_where_with: And, operation: Comparison { op: NotEqual, rhs: Constant(Integer(105)) }, column_type: Tinyint(239) }), ProjectLiteral, TopK { order_type: OrderAscending, limit: 7986679430856579827 }, Filter(Filter { extend_where_with: And, operation: Comparison { op: LessOrEqual, rhs: Constant(String("\"\"𞅏<ٶr&\"$𖭔{Ⱥ")) }, column_type: Text }), Filter(Filter { extend_where_with: And, operation: Comparison { op: And, rhs: Constant(Integer(435837193)) }, column_type: UnsignedInt(248) }), ProjectLiteral, SingleParameter, Filter(Filter { extend_where_with: Or, operation: Comparison { op: Or, rhs: Column }, column_type: Real }), Join(LeftJoin), ProjectBuiltinFunction(ConvertTZ), MultipleParameters, ColumnAggregate(GroupConcat), TopK { order_type: OrderDescending, limit: 9724747978418742418 }, Join(InnerJoin), TopK { order_type: OrderAscending, limit: 9789658604114603206 }, ColumnAggregate(Avg { column_type: Real, distinct: true }), SingleParameter, Join(Join), ColumnAggregate(Max { column_type: Text }), Distinct, MultipleParameters, ProjectLiteral, MultipleParameters, TopK { order_type: OrderDescending, limit: 5228683266537141417 }, SingleParameter, ColumnAggregate(Count { column_type: Real, distinct: true, count_nulls: false }), ProjectLiteral, MultipleParameters, Distinct, ProjectLiteral, ColumnAggregate(Max { column_type: Double }), MultipleParameters, SingleParameter, ProjectBuiltinFunction(DayOfWeek), Join(InnerJoin), ProjectBuiltinFunction(Addtime), ColumnAggregate(Max { column_type: Float }), ProjectLiteral, ProjectBuiltinFunction(Round), MultipleParameters, Distinct, ColumnAggregate(Avg { column_type: UnsignedInt(32), distinct: false }), ColumnAggregate(Max { column_type: UnsignedInt(27) }), TopK { order_type: OrderDescending, limit: 14725411224623187300 }, MultipleParameters, MultipleParameters, ProjectLiteral, Join(Join), ColumnAggregate(Avg { column_type: UnsignedTinyint(8), distinct: false }), Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: Varchar(205) }), Distinct, ProjectLiteral, SingleParameter, ColumnAggregate(Avg { column_type: Tinyint(8), distinct: true }), ProjectLiteral, ProjectLiteral, ProjectBuiltinFunction(DayOfWeek), ProjectBuiltinFunction(ConvertTZ), Join(InnerJoin), MultipleParameters, Distinct, ColumnAggregate(Count { column_type: Bigint(67), distinct: true, count_nulls: true })], subqueries: [] } }] } }] } }
cc 46e65b81843200be142757c681d2b18bc6c61e6f544ee8b83d212353ac76256d # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [Filter(Filter { extend_where_with: Or, operation: Comparison { op: Equal, rhs: Constant(String("-1812-01-17")) }, column_type: Date }), ProjectBuiltinFunction(Round), TopK { order_type: OrderAscending, limit: 4410217369167786396 }, MultipleParameters, TopK { order_type: OrderAscending, limit: 840376726880750800 }, Join(InnerJoin), SingleParameter, Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: Bool }), Join(LeftJoin), ColumnAggregate(Count { column_type: Float, distinct: true, count_nulls: false }), ColumnAggregate(GroupConcat), ProjectBuiltinFunction(Round), TopK { order_type: OrderDescending, limit: 16842860547851214870 }, Join(LeftJoin), ProjectLiteral, Distinct, MultipleParameters, TopK { order_type: OrderAscending, limit: 7630379428733567819 }, Distinct, MultipleParameters, Join(LeftJoin), ProjectBuiltinFunction(Addtime), SingleParameter, MultipleParameters, Filter(Filter { extend_where_with: And, operation: Comparison { op: Or, rhs: Constant(String("ȺY𑤸A🕴A%{𑦡q\u{5ad}ꬫ𑶖rѨT�େ𑲄𑇰Rε1&;𐪑\u{1927}N")) }, column_type: Varchar(231) }), ProjectLiteral, TopK { order_type: OrderAscending, limit: 3129886767703475218 }, Filter(Filter { extend_where_with: Or, operation: Comparison { op: And, rhs: Column }, column_type: Smallint(239) }), SingleParameter], subqueries: [] } }
cc 2c7ef880c3fe97b4c90639c9742be9e166bac3b253b648cbc6ff3ca53635bdcd # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [Join(Join), ColumnAggregate(Avg { column_type: Real, distinct: false }), ProjectLiteral, ColumnAggregate(Avg { column_type: UnsignedSmallint(16), distinct: true }), SingleParameter, MultipleParameters, MultipleParameters, SingleParameter, Distinct, ProjectBuiltinFunction(Month), ProjectLiteral, MultipleParameters, SingleParameter, MultipleParameters, Distinct, ProjectLiteral, MultipleParameters, Distinct, SingleParameter, ColumnAggregate(Min { column_type: DateTime(3) }), TopK { order_type: OrderDescending, limit: 7099953968912446084 }, Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: Tinytext }), ColumnAggregate(Max { column_type: Varchar(175) }), SingleParameter, ColumnAggregate(Max { column_type: Mediumtext }), MultipleParameters, TopK { order_type: OrderDescending, limit: 7438238500451208589 }, ProjectBuiltinFunction(Month), MultipleParameters, SingleParameter, ColumnAggregate(Avg { column_type: Real, distinct: true }), ProjectLiteral, Distinct, MultipleParameters, Join(Join), Distinct, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: Real }), ColumnAggregate(Max { column_type: Tinytext }), Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: Tinyint(155) }), Join(InnerJoin), ProjectBuiltinFunction(Timediff), SingleParameter, ColumnAggregate(GroupConcat), Distinct, TopK { order_type: OrderAscending, limit: 4822175513497303749 }, ColumnAggregate(Avg { column_type: Tinyint(8), distinct: false }), Join(InnerJoin), TopK { order_type: OrderDescending, limit: 16752174479262112270 }, Distinct, ProjectBuiltinFunction(ConvertTZ), Distinct, Distinct, ProjectLiteral, Filter(Filter { extend_where_with: And, operation: Comparison { op: LessOrEqual, rhs: Column }, column_type: Varchar(13) }), Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: Real }), TopK { order_type: OrderDescending, limit: 4010106700485078279 }, Filter(Filter { extend_where_with: Or, operation: Comparison { op: Like, rhs: Column }, column_type: Mediumtext }), ProjectBuiltinFunction(Month), TopK { order_type: OrderDescending, limit: 8564112428272361120 }, ProjectBuiltinFunction(Round), Join(Join), Distinct, MultipleParameters, Distinct, TopK { order_type: OrderAscending, limit: 9257367961027964594 }, Distinct, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: Smallint(105) }), Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: Bigint(193) }), Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: UnsignedInt(226) }), Distinct, SingleParameter, ProjectBuiltinFunction(Round), Distinct, Distinct, Distinct, SingleParameter, ProjectBuiltinFunction(Addtime), SingleParameter, Distinct, Filter(Filter { extend_where_with: And, operation: Between { negated: false }, column_type: UnsignedSmallint(116) }), SingleParameter, ProjectLiteral, ColumnAggregate(Count { column_type: Float, distinct: false, count_nulls: true }), Filter(Filter { extend_where_with: And, operation: Comparison { op: GreaterOrEqual, rhs: Constant(String("¥¥Ý")) }, column_type: Mediumtext }), Join(LeftJoin), ProjectBuiltinFunction(Timediff), Distinct, Join(InnerJoin), ProjectBuiltinFunction(ConvertTZ), ColumnAggregate(Max { column_type: Longtext }), ProjectBuiltinFunction(IfNull), Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: Float })], subqueries: [Subquery { position: Cte(LeftJoin), seed: QuerySeed { operations: [ProjectLiteral, ProjectLiteral, ProjectBuiltinFunction(DayOfWeek), ColumnAggregate(Min { column_type: UnsignedSmallint(116) }), TopK { order_type: OrderAscending, limit: 8342591981942577334 }, Join(InnerJoin), Distinct, SingleParameter, ProjectBuiltinFunction(IfNull), Join(InnerJoin), ProjectBuiltinFunction(Month), Join(Join), ProjectLiteral, ProjectLiteral, TopK { order_type: OrderAscending, limit: 2401431025432865922 }, MultipleParameters, Distinct, ProjectLiteral, Distinct, ProjectLiteral, ProjectLiteral, ColumnAggregate(Avg { column_type: Real, distinct: false }), ProjectBuiltinFunction(Addtime), Distinct, ProjectBuiltinFunction(IfNull), Distinct, TopK { order_type: OrderAscending, limit: 9343848012458392192 }, ProjectLiteral, ProjectLiteral, ProjectLiteral, ProjectLiteral, ProjectBuiltinFunction(ConvertTZ), ProjectBuiltinFunction(DayOfWeek), SingleParameter, ProjectBuiltinFunction(Timediff), Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: DateTime(1) }), Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: Time }), TopK { order_type: OrderDescending, limit: 14541291515498014313 }, ProjectBuiltinFunction(Month), MultipleParameters, ColumnAggregate(Sum { column_type: UnsignedTinyint(8), distinct: true }), Join(LeftJoin), Distinct, SingleParameter, TopK { order_type: OrderAscending, limit: 5291663149549913087 }, SingleParameter, SingleParameter, ColumnAggregate(Sum { column_type: Double, distinct: false }), ColumnAggregate(Sum { column_type: UnsignedSmallint(16), distinct: true }), Distinct, Distinct, Join(InnerJoin), Join(LeftJoin), MultipleParameters, ProjectLiteral, ProjectLiteral, ProjectBuiltinFunction(Addtime), Join(LeftJoin), ProjectLiteral, TopK { order_type: OrderAscending, limit: 6110805181780002248 }, TopK { order_type: OrderAscending, limit: 703226079089996760 }, ProjectBuiltinFunction(ConvertTZ), Join(LeftJoin), MultipleParameters, MultipleParameters, Distinct, SingleParameter, Filter(Filter { extend_where_with: And, operation: Comparison { op: Like, rhs: Constant(Integer(0)) }, column_type: Bool }), MultipleParameters, Distinct, TopK { order_type: OrderDescending, limit: 3688241444093009712 }, ColumnAggregate(Min { column_type: Char(54) }), TopK { order_type: OrderDescending, limit: 10069477828531911922 }, SingleParameter, MultipleParameters, ProjectLiteral, ColumnAggregate(Max { column_type: Float }), ProjectBuiltinFunction(Month), SingleParameter, SingleParameter, MultipleParameters, Join(Join), ColumnAggregate(Max { column_type: Text }), Filter(Filter { extend_where_with: And, operation: Comparison { op: Equal, rhs: Constant(FixedPoint(Real { value: -54137819223211120000000000000000000000000000000000000000000000000000000000000.0, precision: 83 })) }, column_type: Real }), SingleParameter, ProjectLiteral, Filter(Filter { extend_where_with: Or, operation: Comparison { op: NotLike, rhs: Column }, column_type: Mediumtext }), Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: Smallint(54) }), ProjectBuiltinFunction(IfNull)], subqueries: [] } }, Subquery { position: Cte(InnerJoin), seed: QuerySeed { operations: [Join(InnerJoin), Distinct, Distinct, Distinct, Distinct, Join(InnerJoin), Join(LeftJoin), Join(InnerJoin), ColumnAggregate(GroupConcat), ProjectBuiltinFunction(Timediff), MultipleParameters, MultipleParameters, Join(InnerJoin), ProjectLiteral, SingleParameter, ColumnAggregate(Sum { column_type: UnsignedBigint(64), distinct: false }), ProjectBuiltinFunction(Timediff), Distinct, ProjectBuiltinFunction(Timediff), SingleParameter, Distinct, SingleParameter, Join(Join), Join(InnerJoin), ColumnAggregate(Sum { column_type: UnsignedSmallint(16), distinct: true }), MultipleParameters, ColumnAggregate(Sum { column_type: Tinyint(8), distinct: false }), TopK { order_type: OrderDescending, limit: 13558638090836936275 }, Distinct, Distinct, Join(InnerJoin), TopK { order_type: OrderDescending, limit: 10434596446206636685 }, TopK { order_type: OrderDescending, limit: 6435853353632293045 }, SingleParameter, SingleParameter, Distinct, Join(LeftJoin), ProjectLiteral, Join(LeftJoin), ProjectLiteral, ProjectLiteral, ProjectLiteral, ProjectBuiltinFunction(Month), ColumnAggregate(Max { column_type: Smallint(35) }), ColumnAggregate(Avg { column_type: UnsignedBigint(64), distinct: false }), ColumnAggregate(Count { column_type: Double, distinct: true, count_nulls: false }), TopK { order_type: OrderAscending, limit: 2528427447029991613 }, Join(LeftJoin), SingleParameter], subqueries: [] } }] } }
cc 8f57910c458cf70865fd3687de7c13ad1107bcff6446d814ca440cc75414d446 # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [TopK { order_type: OrderAscending, limit: 81 }, Paginate { order_type: OrderDescending, limit: 50, page_number: 67 }, Distinct, Filter(Filter { extend_where_with: And, operation: Comparison { op: LessOrEqual, rhs: Constant(UnsignedInteger(18701)) }, column_type: UnsignedSmallInt(None) }), SingleParameter, MultipleParameters, TopK { order_type: OrderDescending, limit: 17 }, ProjectBuiltinFunction(DayOfWeek), RangeParameter, ColumnAggregate(Min { column_type: Bool }), Distinct, MultipleParameters, MultipleParameters, MultipleRangeParameters, Filter(Filter { extend_where_with: Or, operation: Comparison { op: NotLike, rhs: Constant(String("2892-05-31")) }, column_type: Date }), InParameter { num_values: 75 }, Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: Char(None) }), ProjectBuiltinFunction(Timediff), MultipleParameters, InParameter { num_values: 129 }, RangeParameter, Join(LeftJoin), ProjectLiteral, SingleParameter, MultipleRangeParameters, MultipleRangeParameters, Join(LeftJoin), RangeParameter, InParameter { num_values: 196 }, Join(Join), RangeParameter, SingleParameter, TopK { order_type: OrderAscending, limit: 54 }, Paginate { order_type: OrderDescending, limit: 58, page_number: 65 }, MultipleRangeParameters, MultipleRangeParameters, MultipleRangeParameters, MultipleParameters, Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: Int(None) }), ColumnAggregate(Avg { column_type: TinyInt(None), distinct: true }), ColumnAggregate(GroupConcat), InParameter { num_values: 178 }, ColumnAggregate(GroupConcat), ColumnAggregate(Count { column_type: MediumText, distinct: false }), SingleParameter, InParameter { num_values: 49 }, SingleParameter, MultipleRangeParameters, ProjectLiteral, ProjectBuiltinFunction(Timediff), Join(LeftJoin)], subqueries: [] } }
cc 2a26cafc70ac5bfd594a98ea3a0021a8cc2429220c4937ec6e1f5bb7d9a21e3b # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [Filter(Filter { extend_where_with: Or, operation: Comparison { op: LessOrEqual, rhs: Column }, column_type: SmallInt(Some(219)) }), MultipleParameters, MultipleRangeParameters, ProjectLiteral, RangeParameter, Join(LeftJoin), TopK { order_type: OrderAscending, limit: 12 }, Paginate { order_type: OrderAscending, limit: 80, page_number: 10 }, RangeParameter, MultipleRangeParameters, ProjectBuiltinFunction(Addtime), Distinct, RangeParameter, Distinct, TopK { order_type: OrderAscending, limit: 25 }, Filter(Filter { extend_where_with: And, operation: Comparison { op: LessOrEqual, rhs: Constant(Integer(0)) }, column_type: Bool }), MultipleRangeParameters, ProjectBuiltinFunction(DayOfWeek), MultipleParameters, Paginate { order_type: OrderDescending, limit: 63, page_number: 11 }, MultipleParameters, InParameter { num_values: 13 }, MultipleRangeParameters, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: Numeric(None) }), TopK { order_type: OrderDescending, limit: 55 }, InParameter { num_values: 248 }, Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: Bool }), ColumnAggregate(Avg { column_type: UnsignedInt(None), distinct: true }), Distinct, RangeParameter, MultipleParameters, ProjectLiteral, RangeParameter, MultipleRangeParameters, InParameter { num_values: 133 }, Join(InnerJoin), InParameter { num_values: 125 }, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: SmallInt(Some(82)) }), SingleParameter, Filter(Filter { extend_where_with: Or, operation: Comparison { op: Like, rhs: Column }, column_type: Time }), Filter(Filter { extend_where_with: Or, operation: Comparison { op: Less, rhs: Column }, column_type: TinyInt(None) }), Distinct, Join(Join), TopK { order_type: OrderAscending, limit: 6 }, Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: Double }), Join(InnerJoin), Distinct, Paginate { order_type: OrderDescending, limit: 47, page_number: 61 }, Distinct, ColumnAggregate(Sum { column_type: TinyInt(None), distinct: false }), TopK { order_type: OrderAscending, limit: 81 }, ColumnAggregate(Count { column_type: BigInt(None), distinct: false }), TopK { order_type: OrderDescending, limit: 75 }, ProjectLiteral, Filter(Filter { extend_where_with: Or, operation: Comparison { op: LessOrEqual, rhs: Column }, column_type: VarChar(Some(211)) }), ProjectLiteral, MultipleRangeParameters, Paginate { order_type: OrderDescending, limit: 39, page_number: 36 }, RangeParameter, ProjectLiteral, MultipleRangeParameters, MultipleRangeParameters, Filter(Filter { extend_where_with: Or, operation: Comparison { op: Less, rhs: Column }, column_type: UnsignedTinyInt(None) }), Paginate { order_type: OrderAscending, limit: 33, page_number: 16 }, Paginate { order_type: OrderDescending, limit: 40, page_number: 44 }, Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: Timestamp }), Filter(Filter { extend_where_with: Or, operation: Comparison { op: NotEqual, rhs: Column }, column_type: Bool }), ProjectBuiltinFunction(Month), RangeParameter, SingleParameter, Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: TinyInt(None) })], subqueries: [Subquery { position: Join(LeftJoin), seed: QuerySeed { operations: [Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: Time }), Paginate { order_type: OrderAscending, limit: 3, page_number: 41 }, InParameter { num_values: 77 }, MultipleRangeParameters, ProjectBuiltinFunction(Round), Paginate { order_type: OrderDescending, limit: 42, page_number: 46 }, Paginate { order_type: OrderDescending, limit: 89, page_number: 0 }, ProjectBuiltinFunction(Round), RangeParameter, RangeParameter, RangeParameter, Paginate { order_type: OrderAscending, limit: 34, page_number: 19 }, TopK { order_type: OrderAscending, limit: 24 }, Join(LeftJoin), RangeParameter, Filter(Filter { extend_where_with: Or, operation: Comparison { op: Like, rhs: Constant(String("!c\u{11d90}⑄%𐣫ⶳ'ꯤኵ'.𖭡¥ꬬ\u{9c1}D{🕴::")) }, column_type: TinyText }), TopK { order_type: OrderAscending, limit: 13 }, Distinct, TopK { order_type: OrderDescending, limit: 18 }, ProjectBuiltinFunction(DayOfWeek), TopK { order_type: OrderDescending, limit: 53 }, RangeParameter, TopK { order_type: OrderDescending, limit: 15 }, RangeParameter, ColumnAggregate(GroupConcat), Join(LeftJoin), ProjectBuiltinFunction(Month), SingleParameter, ProjectLiteral, MultipleRangeParameters, TopK { order_type: OrderDescending, limit: 17 }, Distinct, Filter(Filter { extend_where_with: Or, operation: Comparison { op: Greater, rhs: Column }, column_type: UnsignedBigInt(Some(33)) }), Join(InnerJoin), MultipleRangeParameters, TopK { order_type: OrderDescending, limit: 35 }, InParameter { num_values: 251 }, ProjectLiteral, Distinct, Paginate { order_type: OrderDescending, limit: 5, page_number: 45 }, RangeParameter, Paginate { order_type: OrderAscending, limit: 8, page_number: 22 }, Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: MediumText }), Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: DateTime(None) }), ProjectLiteral, MultipleRangeParameters, MultipleParameters, Filter(Filter { extend_where_with: And, operation: Comparison { op: GreaterOrEqual, rhs: Constant(UnsignedInteger(17440874834187648964)) }, column_type: UnsignedBigInt(Some(113)) }), ProjectLiteral, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: Char(Some(235)) }), TopK { order_type: OrderDescending, limit: 18 }, Distinct, Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: Timestamp }), MultipleParameters, Join(InnerJoin), RangeParameter, ProjectLiteral, Paginate { order_type: OrderAscending, limit: 61, page_number: 27 }, ProjectLiteral, ProjectLiteral, TopK { order_type: OrderDescending, limit: 68 }, ProjectLiteral, Distinct, Join(InnerJoin), Paginate { order_type: OrderDescending, limit: 19, page_number: 81 }, MultipleParameters, ProjectLiteral, ProjectLiteral, TopK { order_type: OrderAscending, limit: 48 }, Distinct, InParameter { num_values: 95 }, SingleParameter, MultipleRangeParameters, ProjectBuiltinFunction(ConvertTZ), MultipleRangeParameters, MultipleRangeParameters, Distinct, Paginate { order_type: OrderAscending, limit: 31, page_number: 7 }, ColumnAggregate(GroupConcat), Distinct, Filter(Filter { extend_where_with: And, operation: Comparison { op: Less, rhs: Constant(UnsignedInteger(11665873459975252750)) }, column_type: UnsignedBigInt(Some(62)) }), TopK { order_type: OrderAscending, limit: 31 }], subqueries: [Subquery { position: Exists { correlated: None }, seed: QuerySeed { operations: [InParameter { num_values: 153 }, Distinct, ProjectLiteral, TopK { order_type: OrderDescending, limit: 66 }, Filter(Filter { extend_where_with: And, operation: Comparison { op: Less, rhs: Column }, column_type: Time }), Join(LeftJoin), ProjectBuiltinFunction(DayOfWeek), Paginate { order_type: OrderDescending, limit: 15, page_number: 54 }, MultipleParameters, ProjectBuiltinFunction(Round), Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: VarChar(Some(57)) }), ProjectBuiltinFunction(Timediff), ColumnAggregate(Min { column_type: BigInt(None) }), InParameter { num_values: 148 }, ProjectLiteral, Paginate { order_type: OrderDescending, limit: 9, page_number: 2 }, Join(Join), RangeParameter, MultipleParameters, SingleParameter, TopK { order_type: OrderDescending, limit: 86 }, ColumnAggregate(Count { column_type: Real, distinct: true }), TopK { order_type: OrderDescending, limit: 63 }, ColumnAggregate(Avg { column_type: UnsignedBigInt(None), distinct: true }), RangeParameter, Paginate { order_type: OrderAscending, limit: 94, page_number: 34 }, Join(InnerJoin), InParameter { num_values: 93 }, Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: Text }), ColumnAggregate(Min { column_type: UnsignedInt(Some(250)) }), Join(InnerJoin), MultipleRangeParameters, ProjectLiteral, Paginate { order_type: OrderDescending, limit: 3, page_number: 82 }, ProjectLiteral, Distinct, MultipleParameters, ColumnAggregate(Max { column_type: UnsignedInt(None) }), TopK { order_type: OrderAscending, limit: 19 }, SingleParameter, Join(Join), TopK { order_type: OrderAscending, limit: 84 }, MultipleRangeParameters, SingleParameter, RangeParameter, InParameter { num_values: 60 }, ProjectBuiltinFunction(DayOfWeek), Paginate { order_type: OrderAscending, limit: 22, page_number: 40 }, ProjectBuiltinFunction(ConvertTZ), Join(LeftJoin), ProjectLiteral, Paginate { order_type: OrderAscending, limit: 97, page_number: 87 }, ProjectBuiltinFunction(DayOfWeek), Paginate { order_type: OrderAscending, limit: 7, page_number: 10 }, MultipleRangeParameters, ColumnAggregate(Min { column_type: Decimal(19, 2) }), RangeParameter, RangeParameter, SingleParameter, RangeParameter, ProjectLiteral, MultipleParameters, TopK { order_type: OrderAscending, limit: 52 }, Paginate { order_type: OrderDescending, limit: 0, page_number: 75 }, Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: UnsignedBigInt(Some(105)) }), Join(LeftJoin), ColumnAggregate(Sum { column_type: Int(None), distinct: true }), Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: UnsignedBigInt(None) }), ProjectLiteral, ColumnAggregate(Sum { column_type: UnsignedTinyInt(None), distinct: false }), TopK { order_type: OrderAscending, limit: 38 }, TopK { order_type: OrderDescending, limit: 85 }, ProjectBuiltinFunction(Addtime), ColumnAggregate(Sum { column_type: UnsignedBigInt(None), distinct: false }), InParameter { num_values: 63 }, TopK { order_type: OrderDescending, limit: 71 }], subqueries: [] } }] } }] } }
cc 17902da167b41670b3e395b608854161fb5fde623150c2fd0013de4ad051a28c # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [RangeParameter, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: Decimal(4, 1) }), ProjectLiteral, SingleParameter, ProjectLiteral, SingleParameter, ColumnAggregate(Count { column_type: Bool, distinct: false }), Filter(Filter { extend_where_with: Or, operation: Comparison { op: Like, rhs: Constant(UnsignedInteger(33223)) }, column_type: UnsignedSmallInt(None) }), MultipleParameters, Filter(Filter { extend_where_with: And, operation: Comparison { op: Greater, rhs: Column }, column_type: LongText }), RangeParameter, MultipleRangeParameters, ColumnAggregate(Min { column_type: Int(Some(246)) }), MultipleParameters, RangeParameter, RangeParameter, RangeParameter, Distinct, InParameter { num_values: 230 }, TopK { order_type: OrderAscending, limit: 100 }, Join(LeftJoin), Join(LeftJoin), SingleParameter, SingleParameter, Paginate { order_type: OrderDescending, limit: 42, page_number: 71 }, ProjectBuiltinFunction(Month), MultipleRangeParameters, TopK { order_type: OrderDescending, limit: 28 }, SingleParameter, SingleParameter, ProjectLiteral, Join(Join), InParameter { num_values: 158 }, InParameter { num_values: 12 }, Join(LeftJoin), SingleParameter, Filter(Filter { extend_where_with: Or, operation: Comparison { op: LessOrEqual, rhs: Column }, column_type: Char(None) }), InParameter { num_values: 153 }, Filter(Filter { extend_where_with: And, operation: Between { negated: true }, column_type: Real }), MultipleParameters, ProjectLiteral, Paginate { order_type: OrderAscending, limit: 100, page_number: 47 }, ColumnAggregate(Count { column_type: UnsignedTinyInt(None), distinct: true }), ProjectLiteral, ProjectBuiltinFunction(Timediff), MultipleParameters, TopK { order_type: OrderAscending, limit: 18 }, ProjectLiteral, RangeParameter, Distinct], subqueries: [Subquery { position: Exists { correlated: Some(Time) }, seed: QuerySeed { operations: [Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: Char(Some(172)) }), ProjectBuiltinFunction(Addtime), ProjectLiteral, InParameter { num_values: 165 }, ColumnAggregate(Avg { column_type: UnsignedInt(None), distinct: false })], subqueries: [Subquery { position: Exists { correlated: None }, seed: QuerySeed { operations: [Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: Date }), ProjectBuiltinFunction(ConvertTZ), Join(LeftJoin), SingleParameter, RangeParameter, Join(Join), InParameter { num_values: 58 }, MultipleRangeParameters, MultipleParameters, SingleParameter, RangeParameter, MultipleRangeParameters, InParameter { num_values: 32 }, ProjectLiteral, RangeParameter, Paginate { order_type: OrderAscending, limit: 28, page_number: 11 }, Distinct, ProjectBuiltinFunction(ConvertTZ), Filter(Filter { extend_where_with: And, operation: Comparison { op: NotEqual, rhs: Column }, column_type: VarChar(Some(237)) }), MultipleParameters, InParameter { num_values: 147 }, SingleParameter, MultipleParameters, InParameter { num_values: 202 }, Filter(Filter { extend_where_with: And, operation: Comparison { op: Like, rhs: Column }, column_type: UnsignedInt(None) }), Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: Json }), SingleParameter, Join(LeftJoin), MultipleParameters, MultipleParameters, ProjectLiteral, ProjectBuiltinFunction(ConvertTZ), Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: TinyInt(Some(202)) }), Paginate { order_type: OrderDescending, limit: 55, page_number: 48 }, Distinct, MultipleRangeParameters, InParameter { num_values: 149 }, SingleParameter, Distinct, Join(InnerJoin), Distinct, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: Double }), Distinct, Distinct, ProjectLiteral], subqueries: [] } }] } }, Subquery { position: Exists { correlated: Some(Int(Some(251))) }, seed: QuerySeed { operations: [Join(LeftJoin), ProjectBuiltinFunction(ConvertTZ), InParameter { num_values: 73 }, MultipleParameters, InParameter { num_values: 44 }, ProjectLiteral, SingleParameter, Filter(Filter { extend_where_with: Or, operation: Comparison { op: Less, rhs: Column }, column_type: Real }), SingleParameter, Distinct, ProjectBuiltinFunction(Addtime), RangeParameter, MultipleParameters, ProjectBuiltinFunction(DayOfWeek), MultipleRangeParameters, ProjectBuiltinFunction(ConvertTZ), SingleParameter, Paginate { order_type: OrderDescending, limit: 3, page_number: 48 }, MultipleRangeParameters], subqueries: [Subquery { position: Join(LeftJoin), seed: QuerySeed { operations: [MultipleParameters, RangeParameter, TopK { order_type: OrderDescending, limit: 66 }, Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: Real }), Paginate { order_type: OrderAscending, limit: 22, page_number: 27 }, ProjectBuiltinFunction(DayOfWeek), SingleParameter, Paginate { order_type: OrderDescending, limit: 38, page_number: 36 }, Distinct, InParameter { num_values: 245 }, SingleParameter, ColumnAggregate(Max { column_type: UnsignedTinyInt(Some(217)) }), SingleParameter], subqueries: [] } }, Subquery { position: Join(Join), seed: QuerySeed { operations: [Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: Date }), ColumnAggregate(Sum { column_type: Double, distinct: true }), Join(InnerJoin), ColumnAggregate(Avg { column_type: SmallInt(None), distinct: true }), Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: UnsignedTinyInt(None) }), Filter(Filter { extend_where_with: And, operation: Comparison { op: Equal, rhs: Constant(String("2038-01-01 02:09:06")) }, column_type: Timestamp }), ProjectLiteral, MultipleRangeParameters, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: Decimal(5, 4) }), RangeParameter, TopK { order_type: OrderDescending, limit: 54 }, ProjectLiteral, ProjectLiteral, ColumnAggregate(Max { column_type: Int(Some(59)) }), TopK { order_type: OrderAscending, limit: 69 }, RangeParameter, Paginate { order_type: OrderAscending, limit: 22, page_number: 4 }, Paginate { order_type: OrderAscending, limit: 14, page_number: 40 }, ProjectBuiltinFunction(ConvertTZ), MultipleParameters, ProjectBuiltinFunction(IfNull), RangeParameter, ColumnAggregate(Count { column_type: TinyInt(Some(222)), distinct: true }), Distinct, TopK { order_type: OrderAscending, limit: 12 }, Join(Join), ProjectLiteral, SingleParameter, InParameter { num_values: 36 }, ColumnAggregate(Count { column_type: VarChar(Some(95)), distinct: false }), Join(Join), Distinct, ProjectLiteral, Join(Join), SingleParameter, ProjectBuiltinFunction(Addtime), Join(LeftJoin), Distinct, Join(InnerJoin), SingleParameter, Join(LeftJoin), ProjectLiteral, ColumnAggregate(Min { column_type: Bool }), MultipleParameters, TopK { order_type: OrderAscending, limit: 81 }, ProjectBuiltinFunction(Month), Paginate { order_type: OrderDescending, limit: 51, page_number: 20 }, RangeParameter, MultipleRangeParameters, Paginate { order_type: OrderAscending, limit: 75, page_number: 2 }, InParameter { num_values: 81 }, ProjectLiteral, MultipleParameters, Paginate { order_type: OrderDescending, limit: 88, page_number: 29 }, ProjectBuiltinFunction(Month), SingleParameter, ColumnAggregate(Avg { column_type: Double, distinct: true }), RangeParameter, ProjectBuiltinFunction(IfNull), Paginate { order_type: OrderAscending, limit: 38, page_number: 66 }, ColumnAggregate(Count { column_type: BigInt(Some(28)), distinct: false }), MultipleRangeParameters, MultipleParameters, RangeParameter, ProjectBuiltinFunction(IfNull), TopK { order_type: OrderDescending, limit: 97 }, TopK { order_type: OrderAscending, limit: 33 }, TopK { order_type: OrderDescending, limit: 74 }, MultipleRangeParameters, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: UnsignedInt(None) }), Distinct, Paginate { order_type: OrderAscending, limit: 62, page_number: 47 }, Join(LeftJoin), Filter(Filter { extend_where_with: And, operation: Between { negated: false }, column_type: Numeric(Some((44, None))) }), Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: Timestamp }), ProjectLiteral, SingleParameter, MultipleParameters, SingleParameter, Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: TinyText }), Paginate { order_type: OrderDescending, limit: 49, page_number: 76 }, RangeParameter, InParameter { num_values: 26 }, RangeParameter, TopK { order_type: OrderAscending, limit: 15 }, Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: Time })], subqueries: [] } }] } }] } }
cc bb6b9609e69dc676422702371279ece5fb4bf3814a1e285e6d3340f6de596a37 # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [InParameter { num_values: 0 }], subqueries: [] } }
cc c3337335f77c5b8319fc8ee8b3c286681e16aff27c36e697bd18118a4c74b352 # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [RangeParameter, ProjectLiteral], subqueries: [] } }
cc 72cb71d2ce35743fa59d3b9c4a8c346dc9d862d24d2c8b28909a9105f8daab56 # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [InParameter { num_values: 154 }, Join(InnerJoin), SingleParameter, RangeParameter, InParameter { num_values: 203 }, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: UnsignedTinyInt(Some(165)) }), InParameter { num_values: 66 }, Distinct, Paginate { order_type: OrderDescending, limit: 38, page_number: 36 }, Paginate { order_type: OrderAscending, limit: 7, page_number: 2 }, Join(InnerJoin), MultipleParameters, Distinct, Paginate { order_type: OrderAscending, limit: 80, page_number: 48 }, ColumnAggregate(Sum { column_type: UnsignedSmallInt(None), distinct: true }), ColumnAggregate(Count { column_type: Numeric(None), distinct: true }), Distinct, MultipleParameters, TopK { order_type: OrderAscending, limit: 0 }, RangeParameter, RangeParameter, Distinct, MultipleParameters, ProjectBuiltinFunction(Addtime), Paginate { order_type: OrderDescending, limit: 23, page_number: 1 }, ProjectBuiltinFunction(Timediff), MultipleParameters, RangeParameter, Filter(Filter { extend_where_with: And, operation: Between { negated: false }, column_type: Double }), InParameter { num_values: 139 }, MultipleRangeParameters, Paginate { order_type: OrderDescending, limit: 56, page_number: 5 }, InParameter { num_values: 81 }, TopK { order_type: OrderDescending, limit: 48 }, RangeParameter, Filter(Filter { extend_where_with: And, operation: Comparison { op: Greater, rhs: Column }, column_type: Int(None) }), Join(Join), Join(Join), SingleParameter, MultipleParameters, ProjectLiteral, ProjectBuiltinFunction(ConvertTZ), ColumnAggregate(Min { column_type: Double }), Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: Int(None) }), RangeParameter, RangeParameter, ColumnAggregate(GroupConcat), ProjectLiteral, ProjectLiteral, MultipleParameters, Join(InnerJoin), ProjectLiteral, MultipleParameters, Paginate { order_type: OrderDescending, limit: 49, page_number: 67 }, MultipleRangeParameters, MultipleRangeParameters, InParameter { num_values: 112 }, TopK { order_type: OrderAscending, limit: 33 }, SingleParameter, ProjectLiteral, ProjectLiteral, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: Numeric(None) }), InParameter { num_values: 48 }, MultipleRangeParameters, TopK { order_type: OrderDescending, limit: 74 }, ProjectBuiltinFunction(Month), ProjectBuiltinFunction(DayOfWeek), Distinct, Paginate { order_type: OrderDescending, limit: 91, page_number: 4 }, TopK { order_type: OrderAscending, limit: 54 }, MultipleParameters, SingleParameter, ColumnAggregate(GroupConcat), ProjectLiteral, ProjectBuiltinFunction(Round), ColumnAggregate(Sum { column_type: UnsignedTinyInt(None), distinct: true }), Paginate { order_type: OrderAscending, limit: 71, page_number: 36 }, Distinct, MultipleRangeParameters, Paginate { order_type: OrderDescending, limit: 8, page_number: 90 }, SingleParameter, Filter(Filter { extend_where_with: Or, operation: Comparison { op: NotEqual, rhs: Constant(Double(Double { value: 5.2244828346599117e-14, precision: 255 })) }, column_type: Decimal(1, 1) }), Join(Join), ColumnAggregate(Count { column_type: MediumText, distinct: true }), MultipleParameters, RangeParameter, ColumnAggregate(Min { column_type: SmallInt(None) }), ProjectBuiltinFunction(Round), RangeParameter, Paginate { order_type: OrderDescending, limit: 96, page_number: 25 }, Distinct, MultipleRangeParameters], subqueries: [Subquery { position: Join(Join), seed: QuerySeed { operations: [SingleParameter, MultipleRangeParameters, TopK { order_type: OrderDescending, limit: 82 }, Paginate { order_type: OrderAscending, limit: 42, page_number: 20 }, InParameter { num_values: 55 }, Paginate { order_type: OrderDescending, limit: 82, page_number: 0 }, InParameter { num_values: 53 }, ProjectLiteral, SingleParameter, Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: Json }), Join(Join), ProjectBuiltinFunction(Round), InParameter { num_values: 187 }, MultipleParameters, Distinct, ProjectLiteral, Distinct, Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: Json }), ProjectLiteral, RangeParameter, Distinct, Paginate { order_type: OrderAscending, limit: 62, page_number: 33 }, Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: TinyInt(None) }), Distinct, RangeParameter, MultipleRangeParameters, TopK { order_type: OrderDescending, limit: 11 }, MultipleRangeParameters, MultipleParameters, ColumnAggregate(GroupConcat), InParameter { num_values: 187 }, ColumnAggregate(Max { column_type: Bool }), ProjectLiteral, ColumnAggregate(Min { column_type: SmallInt(None) }), InParameter { num_values: 192 }, MultipleParameters, Filter(Filter { extend_where_with: Or, operation: Comparison { op: Equal, rhs: Column }, column_type: Time }), MultipleRangeParameters, MultipleRangeParameters, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: Time }), Distinct, MultipleRangeParameters, ProjectBuiltinFunction(ConvertTZ)], subqueries: [] } }] } }
cc a946974c640750642a50ffa70d96b5a4e711d331c3b76b4da6834870b4b94284 # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: DateTime(Some(2)) }), Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: VarChar(Some(89)) }), Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: Numeric(Some((11, Some(2)))) }), InParameter { num_values: 55 }, InParameter { num_values: 59 }, MultipleParameters, RangeParameter, Paginate { order_type: OrderAscending, limit: 49, page_number: 27 }, Filter(Filter { extend_where_with: Or, operation: Comparison { op: Like, rhs: Column }, column_type: Int(None) }), InParameter { num_values: 40 }, ColumnAggregate(Sum { column_type: Real, distinct: false }), ProjectBuiltinFunction(Timediff), ProjectBuiltinFunction(Addtime), RangeParameter, ProjectLiteral, Join(InnerJoin), Filter(Filter { extend_where_with: And, operation: Comparison { op: NotLike, rhs: Constant(Float(Float { value: -0.65855074, precision: 39 })) }, column_type: Float }), ProjectBuiltinFunction(IfNull), RangeParameter, SingleParameter, Filter(Filter { extend_where_with: And, operation: Comparison { op: Greater, rhs: Column }, column_type: UnsignedTinyInt(None) }), Filter(Filter { extend_where_with: And, operation: Between { negated: true }, column_type: Float }), SingleParameter, TopK { order_type: OrderAscending, limit: 33 }, ProjectBuiltinFunction(Round)], subqueries: [Subquery { position: Join(Join), seed: QuerySeed { operations: [Distinct, ProjectBuiltinFunction(Round), Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: LongText }), Distinct, TopK { order_type: OrderAscending, limit: 99 }, Paginate { order_type: OrderDescending, limit: 48, page_number: 5 }, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: Date }), RangeParameter, ProjectLiteral, ColumnAggregate(GroupConcat), ColumnAggregate(Max { column_type: Float }), MultipleRangeParameters, Distinct, ProjectLiteral, ProjectBuiltinFunction(ConvertTZ), InParameter { num_values: 65 }, Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: TinyText }), Filter(Filter { extend_where_with: And, operation: Between { negated: true }, column_type: Numeric(None) }), SingleParameter, InParameter { num_values: 104 }, ProjectBuiltinFunction(DayOfWeek), ProjectLiteral, Join(InnerJoin), ProjectBuiltinFunction(IfNull), ProjectBuiltinFunction(IfNull), Distinct, Paginate { order_type: OrderAscending, limit: 86, page_number: 100 }, Filter(Filter { extend_where_with: And, operation: Comparison { op: Like, rhs: Constant(Float(Float { value: -1.2607208e-11, precision: 121 })) }, column_type: Float }), MultipleParameters, SingleParameter, MultipleRangeParameters, Distinct, ColumnAggregate(Count { column_type: UnsignedTinyInt(Some(206)), distinct: true }), MultipleParameters, MultipleParameters, MultipleRangeParameters, Paginate { order_type: OrderAscending, limit: 14, page_number: 1 }, MultipleRangeParameters, MultipleRangeParameters, ProjectBuiltinFunction(ConvertTZ), ProjectLiteral, ColumnAggregate(Max { column_type: UnsignedTinyInt(None) }), MultipleParameters, ProjectLiteral, Join(Join), Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: Float }), Filter(Filter { extend_where_with: Or, operation: Comparison { op: Equal, rhs: Constant(Double(Double { value: -0.0, precision: 133 })) }, column_type: Decimal(19, 1) }), MultipleRangeParameters, Paginate { order_type: OrderDescending, limit: 78, page_number: 58 }, RangeParameter, ProjectLiteral, MultipleParameters, MultipleParameters, Distinct, ProjectLiteral], subqueries: [] } }] } }
cc 014809d66165e6f4faf00d0f34c91f32c545aa71466510f2023a0f9cb1ff9105 # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [TopK { order_type: OrderDescending, limit: 14 }, Join(InnerJoin), RangeParameter, InParameter { num_values: 75 }, MultipleRangeParameters, MultipleParameters, ProjectLiteral, TopK { order_type: OrderDescending, limit: 73 }, MultipleParameters, Join(InnerJoin), InParameter { num_values: 23 }, Paginate { order_type: OrderDescending, limit: 21, page_number: 72 }, Join(LeftJoin), RangeParameter, RangeParameter, RangeParameter, Paginate { order_type: OrderDescending, limit: 61, page_number: 61 }, MultipleRangeParameters, Paginate { order_type: OrderAscending, limit: 74, page_number: 55 }, Paginate { order_type: OrderAscending, limit: 13, page_number: 63 }, InParameter { num_values: 25 }, MultipleParameters, SingleParameter, InParameter { num_values: 56 }, Paginate { order_type: OrderAscending, limit: 84, page_number: 50 }, TopK { order_type: OrderDescending, limit: 71 }, TopK { order_type: OrderDescending, limit: 29 }, ProjectBuiltinFunction(DayOfWeek), Paginate { order_type: OrderAscending, limit: 27, page_number: 9 }, RangeParameter, MultipleParameters, SingleParameter, InParameter { num_values: 43 }, SingleParameter, ProjectLiteral, SingleParameter, RangeParameter, Join(LeftJoin), Join(InnerJoin), InParameter { num_values: 47 }, SingleParameter, MultipleParameters, RangeParameter, ProjectBuiltinFunction(ConvertTZ), Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: Decimal(19, 14) }), Join(LeftJoin), Join(LeftJoin), Join(Join), Join(LeftJoin)], subqueries: [Subquery { position: Cte(Join), seed: QuerySeed { operations: [Distinct, Filter(Filter { extend_where_with: Or, operation: Comparison { op: LessOrEqual, rhs: Column }, column_type: Timestamp }), Join(Join), TopK { order_type: OrderDescending, limit: 20 }, ProjectBuiltinFunction(DayOfWeek), ProjectBuiltinFunction(IfNull), Paginate { order_type: OrderDescending, limit: 3, page_number: 36 }, ColumnAggregate(GroupConcat), TopK { order_type: OrderDescending, limit: 88 }, TopK { order_type: OrderDescending, limit: 1 }, ProjectLiteral, Filter(Filter { extend_where_with: And, operation: Comparison { op: Like, rhs: Constant(String("/`K/ \\=𐠈𐒢xড়*\"")) }, column_type: MediumText }), Join(LeftJoin), TopK { order_type: OrderDescending, limit: 74 }, Join(InnerJoin), Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: SmallInt(Some(188)) }), Distinct, Join(InnerJoin)], subqueries: [] } }] } }
cc e3e69ea90433b38d9196bc4ad8c1d8a47a1bfcde746880187102ec9963af6693 # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [InParameter { num_values: 95 }, MultipleRangeParameters, TopK { order_type: OrderDescending, limit: 54 }, ProjectBuiltinFunction(IfNull), SingleParameter, MultipleParameters, TopK { order_type: OrderDescending, limit: 75 }, ProjectLiteral, MultipleParameters, MultipleParameters, TopK { order_type: OrderAscending, limit: 65 }, RangeParameter, Join(InnerJoin), Paginate { order_type: OrderAscending, limit: 59, page_number: 69 }, ProjectLiteral, Paginate { order_type: OrderAscending, limit: 26, page_number: 50 }, InParameter { num_values: 54 }, ProjectBuiltinFunction(Month), MultipleParameters, TopK { order_type: OrderAscending, limit: 56 }, ProjectBuiltinFunction(Timediff), ProjectBuiltinFunction(ConvertTZ), MultipleParameters, TopK { order_type: OrderAscending, limit: 18 }, RangeParameter, ProjectBuiltinFunction(Timediff), MultipleRangeParameters, RangeParameter, ProjectBuiltinFunction(Month), RangeParameter, SingleParameter, ProjectBuiltinFunction(Timediff)], subqueries: [Subquery { position: Cte(LeftJoin), seed: QuerySeed { operations: [RangeParameter, TopK { order_type: OrderDescending, limit: 47 }, ProjectBuiltinFunction(IfNull), SingleParameter, ColumnAggregate(GroupConcat), ProjectBuiltinFunction(ConvertTZ), MultipleRangeParameters, SingleParameter, MultipleParameters, RangeParameter, MultipleRangeParameters, TopK { order_type: OrderDescending, limit: 65 }, Join(LeftJoin), MultipleRangeParameters, MultipleParameters, ColumnAggregate(Max { column_type: Numeric(None) }), Distinct, Paginate { order_type: OrderDescending, limit: 40, page_number: 48 }, Distinct, Paginate { order_type: OrderAscending, limit: 56, page_number: 52 }, ProjectBuiltinFunction(Addtime), SingleParameter, ProjectLiteral, TopK { order_type: OrderAscending, limit: 71 }, SingleParameter, Paginate { order_type: OrderDescending, limit: 32, page_number: 28 }, TopK { order_type: OrderDescending, limit: 71 }, Distinct, Join(LeftJoin), Distinct, MultipleRangeParameters, MultipleParameters, ProjectLiteral, RangeParameter, SingleParameter, SingleParameter, Distinct, SingleParameter, ColumnAggregate(Sum { column_type: UnsignedBigInt(None), distinct: true }), Filter(Filter { extend_where_with: And, operation: Between { negated: false }, column_type: Bool }), SingleParameter, ProjectLiteral, MultipleRangeParameters, Paginate { order_type: OrderAscending, limit: 59, page_number: 33 }, Paginate { order_type: OrderAscending, limit: 0, page_number: 47 }, SingleParameter, TopK { order_type: OrderDescending, limit: 4 }, SingleParameter, ProjectLiteral, ColumnAggregate(GroupConcat), SingleParameter, SingleParameter, TopK { order_type: OrderDescending, limit: 64 }, Paginate { order_type: OrderAscending, limit: 36, page_number: 74 }, Distinct, ProjectBuiltinFunction(Timediff), Paginate { order_type: OrderDescending, limit: 95, page_number: 36 }, ColumnAggregate(Count { column_type: TinyText, distinct: false }), Distinct, Paginate { order_type: OrderDescending, limit: 3, page_number: 78 }, ColumnAggregate(Max { column_type: Timestamp }), ProjectLiteral, Filter(Filter { extend_where_with: And, operation: Comparison { op: GreaterOrEqual, rhs: Column }, column_type: UnsignedInt(Some(207)) }), Distinct, MultipleRangeParameters, MultipleRangeParameters, Distinct, SingleParameter, RangeParameter, Distinct, Join(InnerJoin), SingleParameter, TopK { order_type: OrderAscending, limit: 38 }, MultipleRangeParameters], subqueries: [Subquery { position: Join(Join), seed: QuerySeed { operations: [Join(LeftJoin), Join(InnerJoin), SingleParameter, InParameter { num_values: 8 }, ProjectLiteral, Join(Join), InParameter { num_values: 3 }, Paginate { order_type: OrderDescending, limit: 73, page_number: 5 }, SingleParameter, InParameter { num_values: 73 }, TopK { order_type: OrderAscending, limit: 85 }, Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: LongText }), SingleParameter, TopK { order_type: OrderDescending, limit: 92 }, ProjectLiteral, MultipleParameters, MultipleRangeParameters, Filter(Filter { extend_where_with: And, operation: Comparison { op: Greater, rhs: Constant(String("?{\"'lP`𞹛H]A/[")) }, column_type: VarChar(Some(180)) }), Paginate { order_type: OrderDescending, limit: 64, page_number: 9 }, Join(InnerJoin), Join(Join), InParameter { num_values: 87 }, Filter(Filter { extend_where_with: And, operation: Comparison { op: GreaterOrEqual, rhs: Constant(Integer(-25827)) }, column_type: SmallInt(None) }), Filter(Filter { extend_where_with: And, operation: Comparison { op: Less, rhs: Column }, column_type: UnsignedTinyInt(None) }), MultipleRangeParameters, InParameter { num_values: 44 }, SingleParameter, MultipleRangeParameters, RangeParameter, Filter(Filter { extend_where_with: And, operation: Between { negated: false }, column_type: DateTime(Some(3)) }), Paginate { order_type: OrderAscending, limit: 65, page_number: 55 }, MultipleParameters, ProjectBuiltinFunction(Month), Join(InnerJoin), ProjectLiteral, MultipleParameters, InParameter { num_values: 92 }, TopK { order_type: OrderDescending, limit: 95 }, ProjectLiteral, MultipleParameters, Join(InnerJoin), Paginate { order_type: OrderAscending, limit: 53, page_number: 3 }, Join(LeftJoin), ProjectLiteral, SingleParameter, ProjectBuiltinFunction(Addtime), Join(LeftJoin), SingleParameter, Paginate { order_type: OrderDescending, limit: 52, page_number: 49 }, ProjectLiteral, Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: Json }), ProjectLiteral, TopK { order_type: OrderDescending, limit: 28 }, Paginate { order_type: OrderAscending, limit: 0, page_number: 39 }, ProjectBuiltinFunction(Addtime), MultipleParameters, ProjectBuiltinFunction(DayOfWeek), RangeParameter, RangeParameter, ProjectBuiltinFunction(Month), ProjectBuiltinFunction(ConvertTZ), TopK { order_type: OrderAscending, limit: 4 }, InParameter { num_values: 93 }], subqueries: [] } }, Subquery { position: Exists { correlated: None }, seed: QuerySeed { operations: [TopK { order_type: OrderDescending, limit: 17 }, TopK { order_type: OrderAscending, limit: 31 }, ProjectBuiltinFunction(IfNull), SingleParameter, Filter(Filter { extend_where_with: And, operation: Comparison { op: Less, rhs: Column }, column_type: LongText }), ColumnAggregate(GroupConcat), MultipleParameters, ProjectLiteral, Paginate { order_type: OrderAscending, limit: 17, page_number: 87 }], subqueries: [] } }] } }] } }
cc c3057d9d8bf7d61ffb9b64839d1546882cf4f2dcb92102f0192c8f95b79b156a # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [SingleParameter, Distinct, TopK { order_type: OrderDescending, limit: 45 }, Paginate { order_type: OrderAscending, limit: 80, page_number: 30 }, Join(InnerJoin), MultipleParameters, MultipleRangeParameters, ProjectLiteral, MultipleRangeParameters, ColumnAggregate(Avg { column_type: Double, distinct: false }), ProjectBuiltinFunction(Addtime), Distinct, Distinct, MultipleParameters, RangeParameter, RangeParameter, ProjectBuiltinFunction(Timediff), Paginate { order_type: OrderDescending, limit: 22, page_number: 62 }, SingleParameter, Distinct, Distinct, Distinct, RangeParameter, Paginate { order_type: OrderDescending, limit: 70, page_number: 90 }, ProjectBuiltinFunction(IfNull), RangeParameter, MultipleParameters], subqueries: [Subquery { position: Cte(LeftJoin), seed: QuerySeed { operations: [SingleParameter, MultipleParameters, Join(Join), Join(Join), Join(LeftJoin), ColumnAggregate(GroupConcat), RangeParameter, Join(LeftJoin), ProjectLiteral, ProjectBuiltinFunction(Round), TopK { order_type: OrderAscending, limit: 71 }, MultipleParameters, ProjectBuiltinFunction(ConvertTZ), Filter(Filter { extend_where_with: And, operation: Between { negated: false }, column_type: UnsignedTinyInt(None) }), Join(Join), Distinct, MultipleParameters, ProjectLiteral, ProjectLiteral, ProjectLiteral, MultipleRangeParameters, MultipleParameters, SingleParameter, Paginate { order_type: OrderDescending, limit: 5, page_number: 11 }, ProjectLiteral, ProjectLiteral, TopK { order_type: OrderAscending, limit: 43 }, ProjectLiteral, TopK { order_type: OrderAscending, limit: 75 }, RangeParameter, Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: DateTime(None) }), Paginate { order_type: OrderDescending, limit: 55, page_number: 95 }, SingleParameter, ColumnAggregate(Min { column_type: MediumText }), SingleParameter, SingleParameter, RangeParameter, ProjectLiteral, Distinct, ProjectLiteral, ProjectBuiltinFunction(DayOfWeek), Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: Numeric(None) }), Join(LeftJoin), MultipleRangeParameters, Join(Join), ProjectBuiltinFunction(Timediff), ColumnAggregate(Sum { column_type: Int(None), distinct: false }), ProjectLiteral, ColumnAggregate(GroupConcat), ColumnAggregate(Sum { column_type: UnsignedTinyInt(None), distinct: true }), Distinct, MultipleRangeParameters, ProjectLiteral, SingleParameter, RangeParameter, ProjectBuiltinFunction(Timediff), TopK { order_type: OrderDescending, limit: 80 }, TopK { order_type: OrderAscending, limit: 81 }, RangeParameter, MultipleParameters], subqueries: [] } }, Subquery { position: Cte(LeftJoin), seed: QuerySeed { operations: [ProjectBuiltinFunction(IfNull), MultipleRangeParameters, ProjectLiteral, RangeParameter, ColumnAggregate(Max { column_type: DateTime(Some(4)) }), Distinct, Paginate { order_type: OrderAscending, limit: 81, page_number: 0 }, ProjectLiteral, TopK { order_type: OrderAscending, limit: 73 }, RangeParameter, MultipleRangeParameters, ProjectBuiltinFunction(Month), MultipleRangeParameters, RangeParameter, Paginate { order_type: OrderDescending, limit: 61, page_number: 19 }, SingleParameter, SingleParameter, ProjectLiteral, TopK { order_type: OrderDescending, limit: 68 }, Filter(Filter { extend_where_with: And, operation: Between { negated: false }, column_type: UnsignedSmallInt(Some(64)) }), Join(LeftJoin), Join(InnerJoin), ProjectBuiltinFunction(DayOfWeek), Join(Join), Paginate { order_type: OrderDescending, limit: 37, page_number: 79 }, Join(Join), SingleParameter, ProjectBuiltinFunction(DayOfWeek), Distinct, SingleParameter, RangeParameter, RangeParameter, ProjectBuiltinFunction(DayOfWeek), MultipleRangeParameters, RangeParameter, ColumnAggregate(GroupConcat), ProjectBuiltinFunction(Timediff), Paginate { order_type: OrderAscending, limit: 95, page_number: 5 }, MultipleRangeParameters, Join(LeftJoin), TopK { order_type: OrderAscending, limit: 47 }, TopK { order_type: OrderDescending, limit: 45 }, MultipleParameters, ProjectLiteral, Paginate { order_type: OrderDescending, limit: 31, page_number: 26 }, Distinct, Join(Join), ProjectBuiltinFunction(Timediff), Join(LeftJoin), ColumnAggregate(Avg { column_type: Real, distinct: true }), SingleParameter, Join(LeftJoin), ProjectBuiltinFunction(ConvertTZ), ColumnAggregate(Count { column_type: Char(Some(165)), distinct: false }), ProjectBuiltinFunction(Round), ProjectLiteral, Distinct, RangeParameter, SingleParameter, ProjectLiteral, Paginate { order_type: OrderAscending, limit: 78, page_number: 31 }, MultipleParameters, Paginate { order_type: OrderDescending, limit: 18, page_number: 13 }, MultipleParameters, MultipleParameters, TopK { order_type: OrderAscending, limit: 4 }], subqueries: [] } }] } }
cc 943c9c585ca72438a91858281640edd25cdde8a3ee76054581d7208bff37dfe0 # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [SingleParameter, Distinct, TopK { order_type: OrderAscending, limit: 81 }, SingleParameter, Paginate { order_type: OrderAscending, limit: 24, page_number: 87 }, ProjectBuiltinFunction(IfNull), TopK { order_type: OrderAscending, limit: 55 }, TopK { order_type: OrderAscending, limit: 65 }, MultipleParameters, ColumnAggregate(GroupConcat), Join(LeftJoin), MultipleParameters, SingleParameter, Distinct, TopK { order_type: OrderDescending, limit: 88 }, SingleParameter, TopK { order_type: OrderAscending, limit: 77 }, ProjectBuiltinFunction(Round), ProjectLiteral, RangeParameter, Paginate { order_type: OrderDescending, limit: 52, page_number: 92 }, Distinct, Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: Decimal(8, 7) }), ProjectBuiltinFunction(Timediff), Join(Join), SingleParameter, ProjectLiteral, Join(LeftJoin), ProjectLiteral, ColumnAggregate(GroupConcat), Distinct, TopK { order_type: OrderAscending, limit: 92 }, Distinct, Paginate { order_type: OrderDescending, limit: 40, page_number: 70 }, Filter(Filter { extend_where_with: And, operation: Comparison { op: Less, rhs: Column }, column_type: UnsignedTinyInt(Some(188)) }), Join(InnerJoin), SingleParameter, SingleParameter, RangeParameter, TopK { order_type: OrderAscending, limit: 92 }, Paginate { order_type: OrderAscending, limit: 81, page_number: 57 }, Join(InnerJoin), TopK { order_type: OrderAscending, limit: 0 }, Distinct, MultipleRangeParameters, TopK { order_type: OrderDescending, limit: 14 }, ProjectLiteral, Filter(Filter { extend_where_with: And, operation: Comparison { op: Equal, rhs: Constant(String("/KJ*🕴%𞥞bL?𝋈R.!𝋧ΈE`𝔻_Ⱥ)<=$p")) }, column_type: Text }), ProjectLiteral, SingleParameter, SingleParameter, RangeParameter, ProjectBuiltinFunction(ConvertTZ), TopK { order_type: OrderDescending, limit: 49 }, Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: UnsignedBigInt(Some(76)) })], subqueries: [Subquery { position: Exists { correlated: None }, seed: QuerySeed { operations: [SingleParameter, TopK { order_type: OrderDescending, limit: 13 }, ProjectBuiltinFunction(Month), SingleParameter, Distinct, RangeParameter, MultipleRangeParameters, Join(LeftJoin)], subqueries: [] } }] } }
cc 0d262a1c1c504c1a478d93814b763628e3b89a82987ca46d864f6401ad6a3ca7 # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [ProjectBuiltinFunction(IfNull), InParameter { num_values: 77 }, RangeParameter, Join(Join), RangeParameter, MultipleParameters, SingleParameter, MultipleRangeParameters, RangeParameter, ProjectLiteral, Join(Join), Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: Double }), MultipleParameters, ProjectBuiltinFunction(DayOfWeek), ProjectBuiltinFunction(Round), InParameter { num_values: 41 }, SingleParameter, TopK { order_type: OrderDescending, limit: 49 }, ProjectLiteral, ProjectBuiltinFunction(Round), ProjectBuiltinFunction(Round), RangeParameter, MultipleParameters, MultipleRangeParameters, MultipleParameters, Join(Join), InParameter { num_values: 27 }, SingleParameter, Paginate { order_type: OrderAscending, limit: 67, page_number: 11 }, ProjectLiteral, ProjectLiteral, MultipleRangeParameters, RangeParameter, Paginate { order_type: OrderDescending, limit: 84, page_number: 1 }, TopK { order_type: OrderDescending, limit: 2 }, MultipleRangeParameters, TopK { order_type: OrderAscending, limit: 67 }, ProjectLiteral, Paginate { order_type: OrderDescending, limit: 14, page_number: 55 }, Join(InnerJoin), TopK { order_type: OrderDescending, limit: 20 }, Join(InnerJoin), Join(InnerJoin), MultipleParameters, ProjectBuiltinFunction(Round), Join(InnerJoin), Paginate { order_type: OrderDescending, limit: 28, page_number: 47 }, RangeParameter, MultipleRangeParameters, MultipleParameters, ProjectBuiltinFunction(Round), Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: VarChar(Some(98)) }), MultipleRangeParameters, InParameter { num_values: 84 }, MultipleRangeParameters, MultipleParameters, ProjectBuiltinFunction(Addtime), MultipleRangeParameters, InParameter { num_values: 99 }, ProjectBuiltinFunction(Month), TopK { order_type: OrderDescending, limit: 1 }, Join(LeftJoin), ProjectBuiltinFunction(Round), SingleParameter, Join(InnerJoin), Join(LeftJoin), ProjectBuiltinFunction(DayOfWeek), InParameter { num_values: 46 }, RangeParameter, Join(Join), RangeParameter, MultipleParameters, Paginate { order_type: OrderDescending, limit: 52, page_number: 28 }, MultipleRangeParameters, Join(LeftJoin), ProjectBuiltinFunction(Round), ProjectLiteral, MultipleRangeParameters], subqueries: [Subquery { position: Cte(LeftJoin), seed: QuerySeed { operations: [TopK { order_type: OrderAscending, limit: 86 }, Join(Join), ProjectBuiltinFunction(Timediff), ProjectBuiltinFunction(Month), Filter(Filter { extend_where_with: Or, operation: Between { negated: false }, column_type: Int(Some(192)) }), Paginate { order_type: OrderAscending, limit: 18, page_number: 87 }, ProjectBuiltinFunction(IfNull), Distinct, ProjectBuiltinFunction(Round), ProjectLiteral, TopK { order_type: OrderAscending, limit: 62 }, ProjectBuiltinFunction(Addtime), ProjectBuiltinFunction(Round), ProjectLiteral, Paginate { order_type: OrderAscending, limit: 11, page_number: 81 }, Paginate { order_type: OrderDescending, limit: 67, page_number: 75 }, Join(InnerJoin), Join(Join), Join(Join), Distinct, ProjectLiteral, TopK { order_type: OrderDescending, limit: 6 }, ColumnAggregate(GroupConcat), ProjectLiteral, Paginate { order_type: OrderDescending, limit: 26, page_number: 66 }, ProjectLiteral, ColumnAggregate(Avg { column_type: Int(None), distinct: false }), Paginate { order_type: OrderDescending, limit: 60, page_number: 95 }, Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: UnsignedTinyInt(None) }), ColumnAggregate(Count { column_type: VarChar(Some(23)), distinct: false }), Filter(Filter { extend_where_with: And, operation: Comparison { op: NotLike, rhs: Constant(Double(Double { value: -0.0, precision: 236 })) }, column_type: Decimal(6, 5) }), ProjectBuiltinFunction(Timediff), ColumnAggregate(Sum { column_type: Real, distinct: false }), Paginate { order_type: OrderDescending, limit: 8, page_number: 62 }, Join(Join), Filter(Filter { extend_where_with: Or, operation: Between { negated: true }, column_type: Time }), ProjectLiteral, Distinct, Paginate { order_type: OrderDescending, limit: 78, page_number: 47 }, ColumnAggregate(Count { column_type: UnsignedBigInt(Some(7)), distinct: false }), Join(InnerJoin), Filter(Filter { extend_where_with: And, operation: Between { negated: false }, column_type: VarChar(Some(135)) }), Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: DateTime(None) }), Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: Json }), TopK { order_type: OrderDescending, limit: 87 }, Join(LeftJoin), ProjectBuiltinFunction(Month), ProjectBuiltinFunction(ConvertTZ), ProjectLiteral, Join(InnerJoin), Filter(Filter { extend_where_with: Or, operation: IsNull { negated: false }, column_type: UnsignedSmallInt(Some(25)) })], subqueries: [] } }, Subquery { position: Cte(InnerJoin), seed: QuerySeed { operations: [Filter(Filter { extend_where_with: Or, operation: Comparison { op: Less, rhs: Constant(UnsignedInteger(54557)) }, column_type: UnsignedSmallInt(Some(193)) }), Filter(Filter { extend_where_with: Or, operation: Comparison { op: LessOrEqual, rhs: Constant(String("2038-01-11 01:08:07")) }, column_type: DateTime(None) }), Filter(Filter { extend_where_with: And, operation: Comparison { op: NotEqual, rhs: Column }, column_type: UnsignedBigInt(None) }), TopK { order_type: OrderAscending, limit: 14 }, Distinct, ProjectLiteral, ProjectLiteral, Filter(Filter { extend_where_with: Or, operation: IsNull { negated: true }, column_type: Float }), Paginate { order_type: OrderDescending, limit: 14, page_number: 67 }, Paginate { order_type: OrderAscending, limit: 94, page_number: 72 }, ColumnAggregate(Max { column_type: LongText }), ProjectBuiltinFunction(Addtime), Paginate { order_type: OrderAscending, limit: 20, page_number: 70 }, TopK { order_type: OrderAscending, limit: 59 }, Filter(Filter { extend_where_with: And, operation: Between { negated: false }, column_type: BigInt(Some(131)) }), ColumnAggregate(Min { column_type: Numeric(Some((60, None))) }), Join(LeftJoin), TopK { order_type: OrderAscending, limit: 85 }, Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: SmallInt(Some(63)) }), ColumnAggregate(Max { column_type: UnsignedBigInt(Some(161)) }), TopK { order_type: OrderDescending, limit: 42 }, ColumnAggregate(Count { column_type: TinyInt(None), distinct: true }), ProjectLiteral, ColumnAggregate(Sum { column_type: Real, distinct: true }), Join(InnerJoin), TopK { order_type: OrderAscending, limit: 76 }, ProjectBuiltinFunction(IfNull), Join(LeftJoin), Join(LeftJoin), ColumnAggregate(Max { column_type: UnsignedSmallInt(None) }), ProjectLiteral, TopK { order_type: OrderAscending, limit: 27 }, Join(InnerJoin), Distinct, ColumnAggregate(Sum { column_type: Float, distinct: true }), Paginate { order_type: OrderDescending, limit: 20, page_number: 1 }, TopK { order_type: OrderDescending, limit: 16 }, Join(InnerJoin), TopK { order_type: OrderDescending, limit: 71 }, ProjectLiteral, Join(LeftJoin), Paginate { order_type: OrderDescending, limit: 70, page_number: 21 }, Paginate { order_type: OrderDescending, limit: 45, page_number: 7 }, Distinct], subqueries: [Subquery { position: Join(LeftJoin), seed: QuerySeed { operations: [Join(LeftJoin), TopK { order_type: OrderDescending, limit: 62 }, RangeParameter, Distinct, ColumnAggregate(GroupConcat), ProjectLiteral, MultipleParameters, Filter(Filter { extend_where_with: And, operation: Comparison { op: GreaterOrEqual, rhs: Column }, column_type: Float }), TopK { order_type: OrderAscending, limit: 81 }, SingleParameter, ProjectBuiltinFunction(ConvertTZ), Distinct, TopK { order_type: OrderDescending, limit: 48 }, ProjectBuiltinFunction(Month), Paginate { order_type: OrderDescending, limit: 6, page_number: 66 }, RangeParameter, ColumnAggregate(Count { column_type: SmallInt(Some(229)), distinct: true }), MultipleParameters, ProjectBuiltinFunction(Timediff), MultipleRangeParameters, MultipleRangeParameters, SingleParameter, MultipleParameters, Paginate { order_type: OrderDescending, limit: 30, page_number: 25 }, TopK { order_type: OrderAscending, limit: 38 }, SingleParameter, Distinct, RangeParameter, RangeParameter, Filter(Filter { extend_where_with: And, operation: Comparison { op: Equal, rhs: Column }, column_type: TinyInt(None) }), MultipleRangeParameters, MultipleParameters, Filter(Filter { extend_where_with: And, operation: Between { negated: true }, column_type: UnsignedBigInt(None) }), Paginate { order_type: OrderDescending, limit: 56, page_number: 26 }, ProjectLiteral, ProjectLiteral, MultipleParameters, ProjectBuiltinFunction(IfNull), Distinct, Filter(Filter { extend_where_with: And, operation: Between { negated: true }, column_type: VarChar(Some(127)) }), RangeParameter, ProjectBuiltinFunction(ConvertTZ), RangeParameter, Distinct, Filter(Filter { extend_where_with: And, operation: Comparison { op: Like, rhs: Constant(Integer(31232)) }, column_type: SmallInt(Some(38)) }), SingleParameter, Join(Join), ProjectBuiltinFunction(DayOfWeek), MultipleRangeParameters, SingleParameter, ProjectBuiltinFunction(Round), ColumnAggregate(Min { column_type: BigInt(None) })], subqueries: [] } }, Subquery { position: Exists { correlated: Some(MediumText) }, seed: QuerySeed { operations: [InParameter { num_values: 4 }, Filter(Filter { extend_where_with: And, operation: Between { negated: true }, column_type: VarChar(Some(204)) }), Paginate { order_type: OrderDescending, limit: 56, page_number: 88 }, RangeParameter, ProjectLiteral, Paginate { order_type: OrderAscending, limit: 2, page_number: 25 }, Filter(Filter { extend_where_with: And, operation: Comparison { op: LessOrEqual, rhs: Column }, column_type: UnsignedBigInt(None) }), Filter(Filter { extend_where_with: And, operation: IsNull { negated: true }, column_type: Text }), ProjectBuiltinFunction(IfNull), Join(LeftJoin), MultipleRangeParameters, Join(LeftJoin), SingleParameter, ProjectBuiltinFunction(DayOfWeek), MultipleParameters, Join(LeftJoin), Paginate { order_type: OrderAscending, limit: 96, page_number: 13 }], subqueries: [] } }] } }] } }
cc 610b23aab30c571f36ac841d9125a6abb1385fd7c6ae4fd13a6296f7031b9151 # shrinks to input = _QueriesWorkInMysqlArgs { seed: QuerySeed { operations: [ColumnAggregate(Max { column_type: UnsignedTinyInt(Some(106)) }), Filter(Filter { extend_where_with: And, operation: IsNull { negated: false }, column_type: UnsignedInt(None) }), MultipleRangeParameters, SingleParameter, MultipleParameters, RangeParameter, Filter(Filter { extend_where_with: And, operation: Comparison { op: LessOrEqual, rhs: Constant(Integer(551592192)) }, column_type: Int(None) }), ProjectBuiltinFunction(Timediff)], subqueries: [Subquery { position: Join(Join), seed: QuerySeed { operations: [SingleParameter, SingleParameter, ColumnAggregate(GroupConcat), RangeParameter, ProjectBuiltinFunction(IfNull), ColumnAggregate(Count { column_type: UnsignedTinyInt(None), distinct: false }), RangeParameter, ColumnAggregate(Count { column_type: Numeric(Some((35, None))), distinct: true }), Filter(Filter { extend_where_with: And, operation: Between { negated: true }, column_type: Char(Some(76)) }), Join(LeftJoin), ProjectLiteral, Distinct, ProjectBuiltinFunction(DayOfWeek), TopK { order_type: OrderDescending, limit: 16 }, MultipleRangeParameters, Join(Join), ColumnAggregate(Avg { column_type: UnsignedTinyInt(None), distinct: true }), MultipleParameters, MultipleRangeParameters, ColumnAggregate(Sum { column_type: UnsignedSmallInt(None), distinct: false }), ColumnAggregate(GroupConcat), Distinct, Paginate { order_type: OrderDescending, limit: 38, page_number: 2 }, Join(Join), TopK { order_type: OrderDescending, limit: 56 }, ColumnAggregate(Max { column_type: TinyText }), ColumnAggregate(Max { column_type: Int(Some(50)) }), MultipleRangeParameters, MultipleParameters, SingleParameter], subqueries: [] } }, Subquery { position: Cte(Join), seed: QuerySeed { operations: [TopK { order_type: OrderDescending, limit: 11 }, Distinct, ProjectBuiltinFunction(Timediff), ColumnAggregate(Sum { column_type: TinyInt(None), distinct: false }), ProjectLiteral, ColumnAggregate(GroupConcat), ProjectBuiltinFunction(Round), MultipleRangeParameters, MultipleParameters, Distinct, Filter(Filter { extend_where_with: And, operation: Comparison { op: NotLike, rhs: Constant(UnsignedInteger(13010785329580038752)) }, column_type: UnsignedBigInt(Some(71)) }), ProjectLiteral, SingleParameter, ProjectLiteral, Join(LeftJoin), RangeParameter, Distinct, Distinct, TopK { order_type: OrderDescending, limit: 59 }, SingleParameter, Join(LeftJoin), ProjectBuiltinFunction(ConvertTZ), Paginate { order_type: OrderAscending, limit: 94, page_number: 63 }, RangeParameter, ProjectBuiltinFunction(Round), RangeParameter, SingleParameter, TopK { order_type: OrderAscending, limit: 71 }, MultipleRangeParameters, ProjectBuiltinFunction(DayOfWeek), SingleParameter, MultipleParameters, ProjectLiteral, RangeParameter, ColumnAggregate(GroupConcat), TopK { order_type: OrderAscending, limit: 51 }, ProjectBuiltinFunction(Round), ProjectBuiltinFunction(Round), Join(LeftJoin), Join(InnerJoin), ColumnAggregate(GroupConcat), SingleParameter, ColumnAggregate(GroupConcat), ColumnAggregate(GroupConcat), ProjectBuiltinFunction(ConvertTZ), ProjectLiteral, SingleParameter, MultipleParameters, Join(LeftJoin), RangeParameter, Join(LeftJoin), ProjectLiteral, Join(InnerJoin), ProjectLiteral, Join(Join), SingleParameter, ProjectBuiltinFunction(IfNull), TopK { order_type: OrderAscending, limit: 99 }, Join(LeftJoin), SingleParameter, RangeParameter, Distinct, Distinct, ProjectLiteral, Distinct, Distinct, ColumnAggregate(GroupConcat), TopK { order_type: OrderDescending, limit: 36 }, TopK { order_type: OrderDescending, limit: 87 }, TopK { order_type: OrderDescending, limit: 50 }, Filter(Filter { extend_where_with: And, operation: Comparison { op: Greater, rhs: Constant(UnsignedInteger(1972534413)) }, column_type: UnsignedInt(None) }), ColumnAggregate(Avg { column_type: UnsignedBigInt(None), distinct: true }), ProjectBuiltinFunction(Round), Join(InnerJoin), ColumnAggregate(Min { column_type: Char(Some(95)) }), TopK { order_type: OrderDescending, limit: 35 }, ProjectLiteral, SingleParameter, RangeParameter, ColumnAggregate(Min { column_type: UnsignedBigInt(None) }), ProjectLiteral, MultipleRangeParameters, TopK { order_type: OrderDescending, limit: 16 }, SingleParameter, ProjectBuiltinFunction(IfNull), ColumnAggregate(Sum { column_type: SmallInt(None), distinct: false }), RangeParameter], subqueries: [] } }] } }
